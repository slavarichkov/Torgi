{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vyach\\\\dev\\\\Torgi\\\\src\\\\utils\\\\Timer\\\\Timer.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  var target_date = new Date().getTime() + 1000 * 3600 * 48; // установить дату обратного отсчета\n  var days, hours, minutes, seconds; // переменные для единиц времени\n\n  var countdown = document.qwerySelector(\"info_timer\"); // получить элемент тега\n\n  getCountdown();\n  setInterval(function () {\n    getCountdown();\n  }, 1000);\n  function getCountdown() {\n    var current_date = new Date().getTime();\n    var seconds_left = (target_date - current_date) / 1000;\n    days = pad(parseInt(seconds_left / 86400));\n    seconds_left = seconds_left % 86400;\n    hours = pad(parseInt(seconds_left / 3600));\n    seconds_left = seconds_left % 3600;\n    minutes = pad(parseInt(seconds_left / 60));\n    seconds = pad(parseInt(seconds_left % 60));\n\n    // строка обратного отсчета  + значение тега\n    countdown.innerHTML = \"<span>\" + days + \"</span><span>\" + hours + \"</span><span>\" + minutes + \"</span><span>\" + seconds + \"</span>\";\n  }\n  function pad(n) {\n    return (n < 10 ? '0' : '') + n;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info_timer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["Timer","target_date","Date","getTime","days","hours","minutes","seconds","countdown","document","qwerySelector","getCountdown","setInterval","current_date","seconds_left","pad","parseInt","innerHTML","n"],"sources":["C:/Users/vyach/dev/Torgi/src/utils/Timer/Timer.js"],"sourcesContent":["\r\nfunction Timer() {\r\n    var target_date = new Date().getTime() + (1000 * 3600 * 48); // установить дату обратного отсчета\r\n    var days, hours, minutes, seconds; // переменные для единиц времени\r\n\r\n    var countdown = document.qwerySelector(\"info_timer\"); // получить элемент тега\r\n\r\n    getCountdown();\r\n\r\n    setInterval(function () { getCountdown(); }, 1000);\r\n\r\n    function getCountdown() {\r\n\r\n        var current_date = new Date().getTime();\r\n        var seconds_left = (target_date - current_date) / 1000;\r\n\r\n        days = pad(parseInt(seconds_left / 86400));\r\n        seconds_left = seconds_left % 86400;\r\n\r\n        hours = pad(parseInt(seconds_left / 3600));\r\n        seconds_left = seconds_left % 3600;\r\n\r\n        minutes = pad(parseInt(seconds_left / 60));\r\n        seconds = pad(parseInt(seconds_left % 60));\r\n\r\n        // строка обратного отсчета  + значение тега\r\n        countdown.innerHTML = \"<span>\" + days + \"</span><span>\" + hours + \"</span><span>\" + minutes + \"</span><span>\" + seconds + \"</span>\";\r\n    }\r\n\r\n    function pad(n) {\r\n        return (n < 10 ? '0' : '') + n;\r\n    }\r\n\r\n    return (\r\n        <div className='info_timer'>{ }</div>\r\n    )\r\n}\r\n\r\nexport default Timer;"],"mappings":";;AACA,SAASA,KAAK,GAAG;EACb,IAAIC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAI,IAAI,GAAG,IAAI,GAAG,EAAG,CAAC,CAAC;EAC7D,IAAIC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;;EAEnC,IAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;;EAEtDC,YAAY,EAAE;EAEdC,WAAW,CAAC,YAAY;IAAED,YAAY,EAAE;EAAE,CAAC,EAAE,IAAI,CAAC;EAElD,SAASA,YAAY,GAAG;IAEpB,IAAIE,YAAY,GAAG,IAAIX,IAAI,EAAE,CAACC,OAAO,EAAE;IACvC,IAAIW,YAAY,GAAG,CAACb,WAAW,GAAGY,YAAY,IAAI,IAAI;IAEtDT,IAAI,GAAGW,GAAG,CAACC,QAAQ,CAACF,YAAY,GAAG,KAAK,CAAC,CAAC;IAC1CA,YAAY,GAAGA,YAAY,GAAG,KAAK;IAEnCT,KAAK,GAAGU,GAAG,CAACC,QAAQ,CAACF,YAAY,GAAG,IAAI,CAAC,CAAC;IAC1CA,YAAY,GAAGA,YAAY,GAAG,IAAI;IAElCR,OAAO,GAAGS,GAAG,CAACC,QAAQ,CAACF,YAAY,GAAG,EAAE,CAAC,CAAC;IAC1CP,OAAO,GAAGQ,GAAG,CAACC,QAAQ,CAACF,YAAY,GAAG,EAAE,CAAC,CAAC;;IAE1C;IACAN,SAAS,CAACS,SAAS,GAAG,QAAQ,GAAGb,IAAI,GAAG,eAAe,GAAGC,KAAK,GAAG,eAAe,GAAGC,OAAO,GAAG,eAAe,GAAGC,OAAO,GAAG,SAAS;EACvI;EAEA,SAASQ,GAAG,CAACG,CAAC,EAAE;IACZ,OAAO,CAACA,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAIA,CAAC;EAClC;EAEA,oBACI;IAAK,SAAS,EAAC;EAAY;IAAA;IAAA;IAAA;EAAA,QAAU;AAE7C;AAAC,KAnCQlB,KAAK;AAqCd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}