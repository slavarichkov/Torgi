{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vyach\\\\dev\\\\Torgi\\\\src\\\\utils\\\\DateAndTime\\\\DateAndTime.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n\n// function DateAndTime() {\n//     //дата и время\n//     const [isDate, setIsDate] = useState(new Date());\n//     setInterval(() => { setIsDate(new Date()); }, 1000); // обновить дату раз в секунду\n\n//     //дата\n//     let date = () => { if (isDate.getDate() < 10) { return '0' + isDate.getDate() } else { return isDate.getDate() } }; // число\n//     let month = () => { if (isDate.getMonth() < 10) { return '0' + isDate.getMonth() } else { return isDate.getMonth() } }; // месяц\n//     let dateNow = date() + '.' + month() + '.' + isDate.getFullYear(); // получить дату;\n\n//     // время\n//     let hours = () => { if (isDate.getHours() < 10) { return '0' + isDate.getHours() } else { return isDate.getHours() } }; // часы\n//     let minutes = () => { if (isDate.getMinutes() < 10) { return '0' + isDate.getMinutes() } else { return isDate.getMinutes() } }; // минуты\n//     let seconds = () => { if (isDate.getSeconds() < 10) { return '0' + isDate.getSeconds() } else { return isDate.getSeconds() } }; // секунды\n//     let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\n\n//     return dateNow + ' ' + timeNow;\n\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Time() {\n  _s();\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [milliseconds, setMilliseconds] = useState(0);\n  useEffect(() => {\n    requestAnimationFrame(() => {\n      const date = new Date();\n      setMilliseconds(date.getMilliseconds());\n      setSeconds(date.getSeconds());\n      setMinutes(date.getMinutes());\n      setHours(date.getHours());\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [hours, \":\", minutes, \":\", seconds, \":\", milliseconds]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Time, \"N/MojOHSq5wTsgWn4AlsbXNMHVM=\");\n_c = Time;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["useState","useEffect","Time","hours","setHours","minutes","setMinutes","seconds","setSeconds","milliseconds","setMilliseconds","requestAnimationFrame","date","Date","getMilliseconds","getSeconds","getMinutes","getHours"],"sources":["C:/Users/vyach/dev/Torgi/src/utils/DateAndTime/DateAndTime.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n// function DateAndTime() {\r\n//     //дата и время\r\n//     const [isDate, setIsDate] = useState(new Date());\r\n//     setInterval(() => { setIsDate(new Date()); }, 1000); // обновить дату раз в секунду\r\n\r\n//     //дата\r\n//     let date = () => { if (isDate.getDate() < 10) { return '0' + isDate.getDate() } else { return isDate.getDate() } }; // число\r\n//     let month = () => { if (isDate.getMonth() < 10) { return '0' + isDate.getMonth() } else { return isDate.getMonth() } }; // месяц\r\n//     let dateNow = date() + '.' + month() + '.' + isDate.getFullYear(); // получить дату;\r\n\r\n//     // время\r\n//     let hours = () => { if (isDate.getHours() < 10) { return '0' + isDate.getHours() } else { return isDate.getHours() } }; // часы\r\n//     let minutes = () => { if (isDate.getMinutes() < 10) { return '0' + isDate.getMinutes() } else { return isDate.getMinutes() } }; // минуты\r\n//     let seconds = () => { if (isDate.getSeconds() < 10) { return '0' + isDate.getSeconds() } else { return isDate.getSeconds() } }; // секунды\r\n//     let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\r\n\r\n//     return dateNow + ' ' + timeNow;\r\n\r\n// };\r\n\r\nfunction Time() {\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [milliseconds, setMilliseconds] = useState(0);\r\n\r\n    useEffect(() => {\r\n        requestAnimationFrame(() => {\r\n            const date = new Date();\r\n            setMilliseconds(date.getMilliseconds());\r\n            setSeconds(date.getSeconds());\r\n            setMinutes(date.getMinutes());\r\n            setHours(date.getHours());\r\n        });\r\n    });\r\n\r\n    return (\r\n        <h2>{hours}:{minutes}:{seconds}:{milliseconds}</h2>\r\n    );\r\n}\r\n\r\nexport default Time;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA;AAEA,SAASC,IAAI,GAAG;EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZU,qBAAqB,CAAC,MAAM;MACxB,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;MACvBH,eAAe,CAACE,IAAI,CAACE,eAAe,EAAE,CAAC;MACvCN,UAAU,CAACI,IAAI,CAACG,UAAU,EAAE,CAAC;MAC7BT,UAAU,CAACM,IAAI,CAACI,UAAU,EAAE,CAAC;MAC7BZ,QAAQ,CAACQ,IAAI,CAACK,QAAQ,EAAE,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBACI;IAAA,WAAKd,KAAK,EAAC,GAAC,EAACE,OAAO,EAAC,GAAC,EAACE,OAAO,EAAC,GAAC,EAACE,YAAY;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;AAE3D;AAAC,GAnBQP,IAAI;AAAA,KAAJA,IAAI;AAqBb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}