{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nfunction Date() {\n  _s();\n  //дата и время\n  const [isDate, setIsDate] = useState(new Date());\n  setInterval(() => setIsDate(new Date()), 1000); // обновить дату раз в секунду\n\n  //дата\n  let date = () => {\n    if (isDate.getDate() < 10) {\n      return '0' + isDate.getDate();\n    } else {\n      return isDate.getDate();\n    }\n  }; // число\n  let month = () => {\n    if (isDate.getMonth() < 10) {\n      return '0' + isDate.getMonth();\n    } else {\n      return isDate.getMonth();\n    }\n  }; // месяц\n  let dateNow = date() + '.' + month() + '.' + isDate.getFullYear(); // получить дату;\n\n  // время\n  let hours = () => {\n    if (isDate.getHours() < 10) {\n      return '0' + isDate.getHours();\n    } else {\n      return isDate.getHours();\n    }\n  }; // часы\n  let minutes = () => {\n    if (isDate.getMinutes() < 10) {\n      return '0' + isDate.getMinutes();\n    } else {\n      return isDate.getMinutes();\n    }\n  }; // минуты\n  let seconds = () => {\n    if (isDate.getSeconds() < 10) {\n      return '0' + isDate.getSeconds();\n    } else {\n      return isDate.getSeconds();\n    }\n  }; // секунды\n  let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\n\n  return dateNow + ' ' + timeNow;\n}\n_s(Date, \"LVVpFkGyavr7oZ0xkJewHJ6T1m8=\");\n_c = Date;\n;\nexport default Date;\nvar _c;\n$RefreshReg$(_c, \"Date\");","map":{"version":3,"names":["useState","Date","isDate","setIsDate","setInterval","date","getDate","month","getMonth","dateNow","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeNow"],"sources":["C:/Users/vyach/dev/Torgi/src/components/date/Date.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction Date() {\r\n    //дата и время\r\n    const [isDate, setIsDate] = useState(new Date());\r\n    setInterval(() => setIsDate(new Date()), 1000); // обновить дату раз в секунду\r\n\r\n    //дата\r\n    let date = () => { if (isDate.getDate() < 10) { return '0' + isDate.getDate() } else { return isDate.getDate() } }; // число\r\n    let month = () => { if (isDate.getMonth() < 10) { return '0' + isDate.getMonth() } else { return isDate.getMonth() } }; // месяц\r\n    let dateNow = date() + '.' + month() + '.' + isDate.getFullYear(); // получить дату;\r\n\r\n    // время\r\n    let hours = () => { if (isDate.getHours() < 10) { return '0' + isDate.getHours() } else { return isDate.getHours() } }; // часы\r\n    let minutes = () => { if (isDate.getMinutes() < 10) { return '0' + isDate.getMinutes() } else { return isDate.getMinutes() } }; // минуты\r\n    let seconds = () => { if (isDate.getSeconds() < 10) { return '0' + isDate.getSeconds() } else { return isDate.getSeconds() } }; // секунды\r\n    let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\r\n\r\n    return dateNow + ' ' + timeNow\r\n\r\n};\r\n\r\nexport default Date;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,IAAI,GAAG;EAAA;EACZ;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC,IAAIC,IAAI,EAAE,CAAC;EAChDG,WAAW,CAAC,MAAMD,SAAS,CAAC,IAAIF,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;EAEhD;EACA,IAAII,IAAI,GAAG,MAAM;IAAE,IAAIH,MAAM,CAACI,OAAO,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGJ,MAAM,CAACI,OAAO,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOJ,MAAM,CAACI,OAAO,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EACpH,IAAIC,KAAK,GAAG,MAAM;IAAE,IAAIL,MAAM,CAACM,QAAQ,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGN,MAAM,CAACM,QAAQ,EAAE;IAAC,CAAC,MAAM;MAAE,OAAON,MAAM,CAACM,QAAQ,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EACxH,IAAIC,OAAO,GAAGJ,IAAI,EAAE,GAAG,GAAG,GAAGE,KAAK,EAAE,GAAG,GAAG,GAAGL,MAAM,CAACQ,WAAW,EAAE,CAAC,CAAC;;EAEnE;EACA,IAAIC,KAAK,GAAG,MAAM;IAAE,IAAIT,MAAM,CAACU,QAAQ,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGV,MAAM,CAACU,QAAQ,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOV,MAAM,CAACU,QAAQ,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EACxH,IAAIC,OAAO,GAAG,MAAM;IAAE,IAAIX,MAAM,CAACY,UAAU,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGZ,MAAM,CAACY,UAAU,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOZ,MAAM,CAACY,UAAU,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EAChI,IAAIC,OAAO,GAAG,MAAM;IAAE,IAAIb,MAAM,CAACc,UAAU,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGd,MAAM,CAACc,UAAU,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOd,MAAM,CAACc,UAAU,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EAChI,IAAIC,OAAO,GAAGN,KAAK,EAAE,GAAG,GAAG,GAAGE,OAAO,EAAE,GAAG,GAAG,GAAGE,OAAO,EAAE,CAAC,CAAC;;EAE3D,OAAON,OAAO,GAAG,GAAG,GAAGQ,OAAO;AAElC;AAAC,GAlBQhB,IAAI;AAAA,KAAJA,IAAI;AAkBZ;AAED,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}