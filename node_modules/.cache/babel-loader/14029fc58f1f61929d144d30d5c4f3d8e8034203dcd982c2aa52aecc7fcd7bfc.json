{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vyach\\\\dev\\\\Torgi\\\\src\\\\components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport './style/app.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //дата и время\n  const [isDate, setIsDate] = useState(new Date());\n  setInterval(() => setIsDate(new Date()), 1000); // обновить дату раз в секунду\n\n  //дата\n  let date = () => {\n    if (isDate.getDate() < 10) {\n      return '0' + isDate.getDate();\n    } else {\n      return isDate.getDate();\n    }\n  }; // число\n  let month = () => {\n    if (isDate.getMonth() < 10) {\n      return '0' + isDate.getMonth();\n    } else {\n      return isDate.getMonth();\n    }\n  }; // минуты\n  let dateNow = date() + '.' + isDate.getMonth() + '.' + isDate.getFullYear(); // получить дату;\n\n  // время\n  let hours = () => {\n    if (isDate.getHours() < 10) {\n      return '0' + isDate.getHours();\n    } else {\n      return isDate.getHours();\n    }\n  }; // часы\n  let minutes = () => {\n    if (isDate.getMinutes() < 10) {\n      return '0' + isDate.getMinutes();\n    } else {\n      return isDate.getMinutes();\n    }\n  }; // минуты\n  let seconds = () => {\n    if (isDate.getSeconds() < 10) {\n      return '0' + isDate.getSeconds();\n    } else {\n      return isDate.getSeconds();\n    }\n  }; // секунды\n  let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header_title\",\n        children: \"\\u0425\\u043E\\u0434 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"header_text\",\n        children: [\"\\u0422\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0440\\u0433\\u0438 \\u043D\\u0430 \\u0430\\u043F\\u043F\\u0430\\u0440\\u0430\\u0442 \\u041B\\u041E\\u0422\\u041E\\u0421 \\u21162033564 (\", dateNow + ' ' + timeNow, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LVVpFkGyavr7oZ0xkJewHJ6T1m8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","isDate","setIsDate","Date","setInterval","date","getDate","month","getMonth","dateNow","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeNow"],"sources":["C:/Users/vyach/dev/Torgi/src/components/App/App.js"],"sourcesContent":["import './style/app.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n\n  //дата и время\n  const [isDate, setIsDate] = useState(new Date());\n  setInterval(() => setIsDate(new Date()), 1000); // обновить дату раз в секунду\n\n  //дата\n  let date = () => { if (isDate.getDate() < 10) { return '0' + isDate.getDate() } else { return isDate.getDate() } }; // число\n  let month = () => { if (isDate.getMonth() < 10) { return '0' + isDate.getMonth() } else { return isDate.getMonth() } }; // минуты\n  let dateNow = date() + '.' + isDate.getMonth() + '.' + isDate.getFullYear(); // получить дату;\n\n  // время\n  let hours = () => { if (isDate.getHours() < 10) { return '0' + isDate.getHours() } else { return isDate.getHours() } }; // часы\n  let minutes = () => { if (isDate.getMinutes() < 10) { return '0' + isDate.getMinutes() } else { return isDate.getMinutes() } }; // минуты\n  let seconds = () => { if (isDate.getSeconds() < 10) { return '0' + isDate.getSeconds() } else { return isDate.getSeconds() } }; // секунды\n  let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\n\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h2 className='header_title'>Ход торгов</h2>\n        <p className='header_text'>Тестовые торги на аппарат ЛОТОС №2033564 ({dateNow + ' ' + timeNow})\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,SAASC,GAAG,GAAG;EAAA;EAEb;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,IAAIK,IAAI,EAAE,CAAC;EAChDC,WAAW,CAAC,MAAMF,SAAS,CAAC,IAAIC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;EAEhD;EACA,IAAIE,IAAI,GAAG,MAAM;IAAE,IAAIJ,MAAM,CAACK,OAAO,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGL,MAAM,CAACK,OAAO,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOL,MAAM,CAACK,OAAO,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EACpH,IAAIC,KAAK,GAAG,MAAM;IAAE,IAAIN,MAAM,CAACO,QAAQ,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGP,MAAM,CAACO,QAAQ,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOP,MAAM,CAACO,QAAQ,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EACxH,IAAIC,OAAO,GAAGJ,IAAI,EAAE,GAAG,GAAG,GAAGJ,MAAM,CAACO,QAAQ,EAAE,GAAG,GAAG,GAAGP,MAAM,CAACS,WAAW,EAAE,CAAC,CAAC;;EAE7E;EACA,IAAIC,KAAK,GAAG,MAAM;IAAE,IAAIV,MAAM,CAACW,QAAQ,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGX,MAAM,CAACW,QAAQ,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOX,MAAM,CAACW,QAAQ,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EACxH,IAAIC,OAAO,GAAG,MAAM;IAAE,IAAIZ,MAAM,CAACa,UAAU,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGb,MAAM,CAACa,UAAU,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOb,MAAM,CAACa,UAAU,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EAChI,IAAIC,OAAO,GAAG,MAAM;IAAE,IAAId,MAAM,CAACe,UAAU,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGf,MAAM,CAACe,UAAU,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOf,MAAM,CAACe,UAAU,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EAChI,IAAIC,OAAO,GAAGN,KAAK,EAAE,GAAG,GAAG,GAAGE,OAAO,EAAE,GAAG,GAAG,GAAGE,OAAO,EAAE,CAAC,CAAC;;EAG3D,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAQ,SAAS,EAAC,QAAQ;MAAA,wBACxB;QAAI,SAAS,EAAC,cAAc;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK,eAC5C;QAAG,SAAS,EAAC,aAAa;QAAA,WAAC,wLAA0C,EAACN,OAAO,GAAG,GAAG,GAAGQ,OAAO,EAAC,GAC9F;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA3BQjB,GAAG;AAAA,KAAHA,GAAG;AA6BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}