{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vyach\\\\dev\\\\Torgi\\\\src\\\\utils\\\\Timer\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const Ref = useRef(null);\n  const [timer, setTimer] = useState('00:00:00');\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n    return {\n      total,\n      hours,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = e => {\n    let {\n      total,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n    if (total >= 0) {\n      setTimer((hours > 9 ? hours : '0' + hours) + ':' + (minutes > 9 ? minutes : '0' + minutes) + ':' + (seconds > 9 ? seconds : '0' + seconds));\n    }\n  };\n  const clearTimer = e => {\n    setTimer('00:00:00');\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 60);\n    return deadline;\n  };\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n  const onClickReset = () => {\n    clearTimer(getDeadTime());\n  };\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: timer\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this)\n  // <button onClick={onClickReset}>Reset</button>\n  ;\n}\n_s(Timer, \"HPeaHJ9UVwlp0EkypzcTPI/d1Lw=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Timer","Ref","timer","setTimer","getTimeRemaining","e","total","Date","parse","seconds","Math","floor","minutes","hours","startTimer","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","onClickReset"],"sources":["C:/Users/vyach/dev/Torgi/src/utils/Timer/Timer.js"],"sourcesContent":["\r\nimport React, { useEffect, useState, useRef } from 'react';\r\n\r\n\r\nfunction Timer() {\r\n    const Ref = useRef(null);\r\n    const [timer, setTimer] = useState('00:00:00');\r\n\r\n    const getTimeRemaining = (e) => {\r\n        const total = Date.parse(e) - Date.parse(new Date());\r\n        const seconds = Math.floor((total / 1000) % 60);\r\n        const minutes = Math.floor((total / 1000 / 60) % 60);\r\n        const hours = Math.floor((total / 1000 / 60 / 60) % 24);\r\n        return {\r\n            total, hours, minutes, seconds\r\n        };\r\n    }\r\n\r\n    const startTimer = (e) => {\r\n        let { total, hours, minutes, seconds }\r\n            = getTimeRemaining(e);\r\n        if (total >= 0) {\r\n            setTimer(\r\n                (hours > 9 ? hours : '0' + hours) + ':' +\r\n                (minutes > 9 ? minutes : '0' + minutes) + ':'\r\n                + (seconds > 9 ? seconds : '0' + seconds)\r\n            )\r\n        }\r\n    }\r\n\r\n    const clearTimer = (e) => {   \r\n        setTimer('00:00:00');\r\n        if (Ref.current) clearInterval(Ref.current);\r\n        const id = setInterval(() => {\r\n            startTimer(e);\r\n        }, 1000)\r\n        Ref.current = id;\r\n    }\r\n\r\n    const getDeadTime = () => {\r\n        let deadline = new Date();\r\n        deadline.setSeconds(deadline.getSeconds() + 60);\r\n        return deadline;\r\n    }\r\n    useEffect(() => {\r\n        clearTimer(getDeadTime());\r\n    }, []);\r\n\r\n    const onClickReset = () => {\r\n        clearTimer(getDeadTime());\r\n    }\r\n\r\n    return (\r\n        <h2>{timer}</h2>\r\n        // <button onClick={onClickReset}>Reset</button>\r\n    )\r\n}\r\n\r\nexport default Timer;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAG3D,SAASC,KAAK,GAAG;EAAA;EACb,MAAMC,GAAG,GAAGF,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,UAAU,CAAC;EAE9C,MAAMM,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC,GAAGE,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,EAAE,CAAC;IACpD,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEL,KAAK,GAAG,IAAI,GAAI,EAAE,CAAC;IAC/C,MAAMM,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEL,KAAK,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;IACpD,MAAMO,KAAK,GAAGH,IAAI,CAACC,KAAK,CAAEL,KAAK,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAI,EAAE,CAAC;IACvD,OAAO;MACHA,KAAK;MAAEO,KAAK;MAAED,OAAO;MAAEH;IAC3B,CAAC;EACL,CAAC;EAED,MAAMK,UAAU,GAAIT,CAAC,IAAK;IACtB,IAAI;MAAEC,KAAK;MAAEO,KAAK;MAAED,OAAO;MAAEH;IAAQ,CAAC,GAChCL,gBAAgB,CAACC,CAAC,CAAC;IACzB,IAAIC,KAAK,IAAI,CAAC,EAAE;MACZH,QAAQ,CACJ,CAACU,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,GAAG,GAAGA,KAAK,IAAI,GAAG,IACtCD,OAAO,GAAG,CAAC,GAAGA,OAAO,GAAG,GAAG,GAAGA,OAAO,CAAC,GAAG,GAAG,IAC1CH,OAAO,GAAG,CAAC,GAAGA,OAAO,GAAG,GAAG,GAAGA,OAAO,CAAC,CAC5C;IACL;EACJ,CAAC;EAED,MAAMM,UAAU,GAAIV,CAAC,IAAK;IACtBF,QAAQ,CAAC,UAAU,CAAC;IACpB,IAAIF,GAAG,CAACe,OAAO,EAAEC,aAAa,CAAChB,GAAG,CAACe,OAAO,CAAC;IAC3C,MAAME,EAAE,GAAGC,WAAW,CAAC,MAAM;MACzBL,UAAU,CAACT,CAAC,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;IACRJ,GAAG,CAACe,OAAO,GAAGE,EAAE;EACpB,CAAC;EAED,MAAME,WAAW,GAAG,MAAM;IACtB,IAAIC,QAAQ,GAAG,IAAId,IAAI,EAAE;IACzBc,QAAQ,CAACC,UAAU,CAACD,QAAQ,CAACE,UAAU,EAAE,GAAG,EAAE,CAAC;IAC/C,OAAOF,QAAQ;EACnB,CAAC;EACDxB,SAAS,CAAC,MAAM;IACZkB,UAAU,CAACK,WAAW,EAAE,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAG,MAAM;IACvBT,UAAU,CAACK,WAAW,EAAE,CAAC;EAC7B,CAAC;EAED,oBACI;IAAA,UAAKlB;EAAK;IAAA;IAAA;IAAA;EAAA;EACV;EAAA;AAER;AAAC,GApDQF,KAAK;AAAA,KAALA,KAAK;AAsDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}