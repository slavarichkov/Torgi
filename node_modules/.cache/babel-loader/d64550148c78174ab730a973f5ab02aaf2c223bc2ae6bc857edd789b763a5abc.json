{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vyach\\\\dev\\\\Torgi\\\\src\\\\utils\\\\DateAndTime\\\\DateAndTime.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Time() {\n  _s();\n  const [isDate, setIsDate] = useState(new Date());\n  useEffect(() => {\n    const timerID = setInterval(() => {\n      setIsDate(new Date());\n    }, 1000);\n    ;\n    return () => clearInterval(timerID);\n  }, [isDate]);\n\n  //дата\n  let date = () => {\n    if (isDate.getDate() < 10) {\n      return '0' + isDate.getDate();\n    } else {\n      return isDate.getDate();\n    }\n  }; // число\n  let month = () => {\n    if (isDate.getMonth() < 10) {\n      return '0' + isDate.getMonth();\n    } else {\n      return isDate.getMonth();\n    }\n  }; // месяц\n  let dateNow = isDate.getDate() + '.' + month() + '.' + isDate.getFullYear(); // получить дату;\n\n  // время\n  let hours = () => {\n    if (isDate.getHours() < 10) {\n      return '0' + isDate.getHours();\n    } else {\n      return isDate.getHours();\n    }\n  }; // часы\n  let minutes = () => {\n    if (isDate.getMinutes() < 10) {\n      return '0' + isDate.getMinutes();\n    } else {\n      return isDate.getMinutes();\n    }\n  }; // минуты\n  let seconds = () => {\n    if (isDate.getSeconds() < 10) {\n      return '0' + isDate.getSeconds();\n    } else {\n      return isDate.getSeconds();\n    }\n  }; // секунды\n  let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"header_text\",\n    children: [\"(\", dateNow, \" \", timeNow, \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n}\n_s(Time, \"MuS7PGqWdZuC+Sl2cGn3gD7ydNk=\");\n_c = Time;\n;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["useState","useEffect","Time","isDate","setIsDate","Date","timerID","setInterval","clearInterval","date","getDate","month","getMonth","dateNow","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeNow"],"sources":["C:/Users/vyach/dev/Torgi/src/utils/DateAndTime/DateAndTime.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction Time() {\r\n    const [isDate, setIsDate] = useState(new Date());\r\n    useEffect(() => {\r\n        const timerID = setInterval(() => { setIsDate(new Date()); }, 1000);;\r\n        return () => clearInterval(timerID);\r\n    }, [isDate]);\r\n\r\n    //дата\r\n    let date = () => { if (isDate.getDate() < 10) { return '0' + isDate.getDate() } else { return isDate.getDate() } }; // число\r\n    let month = () => { if (isDate.getMonth() < 10) { return '0' + isDate.getMonth() } else { return isDate.getMonth() } }; // месяц\r\n    let dateNow = isDate.getDate() + '.' + month() + '.' + isDate.getFullYear(); // получить дату;\r\n\r\n    // время\r\n    let hours = () => { if (isDate.getHours() < 10) { return '0' + isDate.getHours() } else { return isDate.getHours() } }; // часы\r\n    let minutes = () => { if (isDate.getMinutes() < 10) { return '0' + isDate.getMinutes() } else { return isDate.getMinutes() } }; // минуты\r\n    let seconds = () => { if (isDate.getSeconds() < 10) { return '0' + isDate.getSeconds() } else { return isDate.getSeconds() } }; // секунды\r\n    let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\r\n\r\n    return (<p className='header_text'>({dateNow} {timeNow});</p>)\r\n\r\n\r\n};\r\n\r\nexport default Time;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAE5C,SAASC,IAAI,GAAG;EAAA;EACZ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,IAAIK,IAAI,EAAE,CAAC;EAChDJ,SAAS,CAAC,MAAM;IACZ,MAAMK,OAAO,GAAGC,WAAW,CAAC,MAAM;MAAEH,SAAS,CAAC,IAAIC,IAAI,EAAE,CAAC;IAAE,CAAC,EAAE,IAAI,CAAC;IAAC;IACpE,OAAO,MAAMG,aAAa,CAACF,OAAO,CAAC;EACvC,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;;EAEZ;EACA,IAAIM,IAAI,GAAG,MAAM;IAAE,IAAIN,MAAM,CAACO,OAAO,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGP,MAAM,CAACO,OAAO,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOP,MAAM,CAACO,OAAO,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EACpH,IAAIC,KAAK,GAAG,MAAM;IAAE,IAAIR,MAAM,CAACS,QAAQ,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGT,MAAM,CAACS,QAAQ,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOT,MAAM,CAACS,QAAQ,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EACxH,IAAIC,OAAO,GAAGV,MAAM,CAACO,OAAO,EAAE,GAAG,GAAG,GAAGC,KAAK,EAAE,GAAG,GAAG,GAAGR,MAAM,CAACW,WAAW,EAAE,CAAC,CAAC;;EAE7E;EACA,IAAIC,KAAK,GAAG,MAAM;IAAE,IAAIZ,MAAM,CAACa,QAAQ,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGb,MAAM,CAACa,QAAQ,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOb,MAAM,CAACa,QAAQ,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EACxH,IAAIC,OAAO,GAAG,MAAM;IAAE,IAAId,MAAM,CAACe,UAAU,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGf,MAAM,CAACe,UAAU,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOf,MAAM,CAACe,UAAU,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EAChI,IAAIC,OAAO,GAAG,MAAM;IAAE,IAAIhB,MAAM,CAACiB,UAAU,EAAE,GAAG,EAAE,EAAE;MAAE,OAAO,GAAG,GAAGjB,MAAM,CAACiB,UAAU,EAAE;IAAC,CAAC,MAAM;MAAE,OAAOjB,MAAM,CAACiB,UAAU,EAAE;IAAC;EAAE,CAAC,CAAC,CAAC;EAChI,IAAIC,OAAO,GAAGN,KAAK,EAAE,GAAG,GAAG,GAAGE,OAAO,EAAE,GAAG,GAAG,GAAGE,OAAO,EAAE,CAAC,CAAC;;EAE3D,oBAAQ;IAAG,SAAS,EAAC,aAAa;IAAA,WAAC,GAAC,EAACN,OAAO,EAAC,GAAC,EAACQ,OAAO,EAAC,IAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAAI;AAGjE;AAAC,GArBQnB,IAAI;AAAA,KAAJA,IAAI;AAqBZ;AAED,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}