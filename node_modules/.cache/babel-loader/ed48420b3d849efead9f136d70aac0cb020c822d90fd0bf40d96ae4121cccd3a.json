{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vyach\\\\dev\\\\Torgi\\\\src\\\\utils\\\\Timer\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  let target_date = new Date().getTime() + 1000 * 3600 * 48; // установить дату обратного отсчета\n  //let days, hours, minutes, seconds; // переменные для единиц времени\n  //const [[hours, minutes, seconds], setTime] = useState([0, 7, 60]);\n  const [seconds, setSeconds] = useState(0);\n  function pad(n) {\n    return (n < 10 ? '0' : '') + n;\n  }\n  function getCountdown() {\n    let current_date = new Date().getTime();\n    let seconds_left = (target_date - current_date) / 1000;\n\n    //days = pad(parseInt(seconds_left / 86400));\n    //seconds_left = seconds_left % 86400;\n\n    //hours = pad(parseInt(seconds_left / 3600));\n    //seconds_left = seconds_left % 3600;\n\n    //minutes = pad(parseInt(seconds_left / 60));\n    //seconds = pad(parseInt(seconds_left % 60));\n    setSeconds(pad(parseInt(seconds_left % 60)));\n    console.log(seconds);\n    return seconds;\n  }\n  getCountdown();\n  setInterval(function () {\n    getCountdown();\n  }, 1000);\n\n  //const [isDate, setIsDate] = useState(new Date());\n  //setInterval(() => { setIsDate(new Date()); console.log(new Date().getSeconds()) }, 1000); // обновить дату раз в секунду\n\n  // useEffect(() => {\n  //setInterval(function () { getCountdown(); }, 1000);\n  //     console.log(1)\n  //setInterval(function () { console.log(1) }, 1000);\n  //}, [isDate]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"info_timer\",\n    children: seconds\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"kbELkP5hhP5J8b20TMaxeyLQLqs=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","Timer","target_date","Date","getTime","seconds","setSeconds","pad","n","getCountdown","current_date","seconds_left","parseInt","console","log","setInterval"],"sources":["C:/Users/vyach/dev/Torgi/src/utils/Timer/Timer.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction Timer() {\r\n    let target_date = new Date().getTime() + (1000 * 3600 * 48); // установить дату обратного отсчета\r\n    //let days, hours, minutes, seconds; // переменные для единиц времени\r\n    //const [[hours, minutes, seconds], setTime] = useState([0, 7, 60]);\r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    function pad(n) {\r\n        return (n < 10 ? '0' : '') + n;\r\n    }\r\n\r\n    function getCountdown() {\r\n\r\n        let current_date = new Date().getTime();\r\n        let seconds_left = (target_date - current_date) / 1000;\r\n\r\n        //days = pad(parseInt(seconds_left / 86400));\r\n        //seconds_left = seconds_left % 86400;\r\n\r\n        //hours = pad(parseInt(seconds_left / 3600));\r\n        //seconds_left = seconds_left % 3600;\r\n\r\n        //minutes = pad(parseInt(seconds_left / 60));\r\n        //seconds = pad(parseInt(seconds_left % 60));\r\n        setSeconds( pad(parseInt(seconds_left % 60)))\r\n        console.log(seconds)\r\n        return seconds;\r\n    }\r\n\r\n\r\n\r\n\r\n    getCountdown();\r\n\r\n    setInterval(function () { getCountdown(); }, 1000);\r\n\r\n    //const [isDate, setIsDate] = useState(new Date());\r\n    //setInterval(() => { setIsDate(new Date()); console.log(new Date().getSeconds()) }, 1000); // обновить дату раз в секунду\r\n\r\n    // useEffect(() => {\r\n    //setInterval(function () { getCountdown(); }, 1000);\r\n    //     console.log(1)\r\n    //setInterval(function () { console.log(1) }, 1000);\r\n    //}, [isDate]);\r\n\r\n    return (\r\n        <div className='info_timer'>{seconds}</div>)\r\n}\r\n\r\nexport default Timer;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,SAASC,KAAK,GAAG;EAAA;EACb,IAAIC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAI,IAAI,GAAG,IAAI,GAAG,EAAG,CAAC,CAAC;EAC7D;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAEzC,SAASO,GAAG,CAACC,CAAC,EAAE;IACZ,OAAO,CAACA,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAIA,CAAC;EAClC;EAEA,SAASC,YAAY,GAAG;IAEpB,IAAIC,YAAY,GAAG,IAAIP,IAAI,EAAE,CAACC,OAAO,EAAE;IACvC,IAAIO,YAAY,GAAG,CAACT,WAAW,GAAGQ,YAAY,IAAI,IAAI;;IAEtD;IACA;;IAEA;IACA;;IAEA;IACA;IACAJ,UAAU,CAAEC,GAAG,CAACK,QAAQ,CAACD,YAAY,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7CE,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;IACpB,OAAOA,OAAO;EAClB;EAKAI,YAAY,EAAE;EAEdM,WAAW,CAAC,YAAY;IAAEN,YAAY,EAAE;EAAE,CAAC,EAAE,IAAI,CAAC;;EAElD;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACI;IAAK,SAAS,EAAC,YAAY;IAAA,UAAEJ;EAAO;IAAA;IAAA;IAAA;EAAA,QAAO;AACnD;AAAC,GA9CQJ,KAAK;AAAA,KAALA,KAAK;AAgDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}