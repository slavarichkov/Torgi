{"ast":null,"code":"import { useState, useEffect } from 'react';\n\n// function DateAndTime() {\n//     //дата и время\n//     const [isDate, setIsDate] = useState(new Date());\n//     setInterval(() => { setIsDate(new Date()); }, 1000); // обновить дату раз в секунду\n\n//     //дата\n//     let date = () => { if (isDate.getDate() < 10) { return '0' + isDate.getDate() } else { return isDate.getDate() } }; // число\n//     let month = () => { if (isDate.getMonth() < 10) { return '0' + isDate.getMonth() } else { return isDate.getMonth() } }; // месяц\n//     let dateNow = date() + '.' + month() + '.' + isDate.getFullYear(); // получить дату;\n\n//     // время\n//     let hours = () => { if (isDate.getHours() < 10) { return '0' + isDate.getHours() } else { return isDate.getHours() } }; // часы\n//     let minutes = () => { if (isDate.getMinutes() < 10) { return '0' + isDate.getMinutes() } else { return isDate.getMinutes() } }; // минуты\n//     let seconds = () => { if (isDate.getSeconds() < 10) { return '0' + isDate.getSeconds() } else { return isDate.getSeconds() } }; // секунды\n//     let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\n\n//     return dateNow + ' ' + timeNow;\n\n// };\n\n// function Time() {\n//     const [hours, setHours] = useState(0);\n//     const [minutes, setMinutes] = useState(0);\n//     const [seconds, setSeconds] = useState(0);\n//     const [milliseconds, setMilliseconds] = useState(0);\n\n//     useEffect(() => {\n//         console.log(new Date().getSeconds());\n//         requestAnimationFrame(() => {\n//             const date = new Date();\n//             setMilliseconds(date.getMilliseconds());\n//             setSeconds(date.getSeconds());\n//             setMinutes(date.getMinutes());\n//             setHours(date.getHours());\n//         });\n//     });\n\n//     return (\n//         <h2>{hours}:{minutes}:{seconds}</h2>\n//     );\n// }\n\nexport default Time;","map":{"version":3,"names":["useState","useEffect","Time"],"sources":["C:/Users/vyach/dev/Torgi/src/utils/DateAndTime/DateAndTime.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n// function DateAndTime() {\r\n//     //дата и время\r\n//     const [isDate, setIsDate] = useState(new Date());\r\n//     setInterval(() => { setIsDate(new Date()); }, 1000); // обновить дату раз в секунду\r\n\r\n//     //дата\r\n//     let date = () => { if (isDate.getDate() < 10) { return '0' + isDate.getDate() } else { return isDate.getDate() } }; // число\r\n//     let month = () => { if (isDate.getMonth() < 10) { return '0' + isDate.getMonth() } else { return isDate.getMonth() } }; // месяц\r\n//     let dateNow = date() + '.' + month() + '.' + isDate.getFullYear(); // получить дату;\r\n\r\n//     // время\r\n//     let hours = () => { if (isDate.getHours() < 10) { return '0' + isDate.getHours() } else { return isDate.getHours() } }; // часы\r\n//     let minutes = () => { if (isDate.getMinutes() < 10) { return '0' + isDate.getMinutes() } else { return isDate.getMinutes() } }; // минуты\r\n//     let seconds = () => { if (isDate.getSeconds() < 10) { return '0' + isDate.getSeconds() } else { return isDate.getSeconds() } }; // секунды\r\n//     let timeNow = hours() + ':' + minutes() + ':' + seconds(); // получить время\r\n\r\n//     return dateNow + ' ' + timeNow;\r\n\r\n// };\r\n\r\n// function Time() {\r\n//     const [hours, setHours] = useState(0);\r\n//     const [minutes, setMinutes] = useState(0);\r\n//     const [seconds, setSeconds] = useState(0);\r\n//     const [milliseconds, setMilliseconds] = useState(0);\r\n\r\n//     useEffect(() => {\r\n//         console.log(new Date().getSeconds());\r\n//         requestAnimationFrame(() => {\r\n//             const date = new Date();\r\n//             setMilliseconds(date.getMilliseconds());\r\n//             setSeconds(date.getSeconds());\r\n//             setMinutes(date.getMinutes());\r\n//             setHours(date.getHours());\r\n//         });\r\n//     });\r\n\r\n//     return (\r\n//         <h2>{hours}:{minutes}:{seconds}</h2>\r\n//     );\r\n// }\r\n\r\nexport default Time;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAeC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}